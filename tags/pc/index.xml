<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PC on Sinn144</title>
    <link>https://sinn144.github.io/my_blogsite/tags/pc/</link>
    <description>Recent content in PC on Sinn144</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Thu, 29 Aug 2019 22:10:22 +0900</lastBuildDate>
    
	<atom:link href="https://sinn144.github.io/my_blogsite/tags/pc/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>ssh config</title>
      <link>https://sinn144.github.io/my_blogsite/002_ssh_config/</link>
      <pubDate>Thu, 29 Aug 2019 22:10:22 +0900</pubDate>
      
      <guid>https://sinn144.github.io/my_blogsite/002_ssh_config/</guid>
      <description>SSHの設定ファイルとか多段認証とかの雑記 こんかいはとにかく外部SSHサーバーとの連携についてまとめておく。
使用環境  サーバー側:Ubuntu 18.04 LTS（だったはず）＋構築済みOPEN-SSHサーバー クライアント側:Windows subsystem for linux(WSL)  SSHに接続するための準備 サーバー側にユーザーを登録する必要がある。
Sudo権限を持つ人が、踏み台サーバーの方に登録したい人を次のように登録。
### サーバー側設定 $ useradd -m -s /bin/bash ##user_name## $ # s: shell 指定 m: home dir 作成 $ passwd ##user_name## $ # passwd はアカウントのパスワードを設定するコマンド  因みに、過去に登録したUser名は、
$ less /etc/passwd  で確認できた。まあこの辺の読み方は Linuxでユーザーの一覧や現在のユーザを確認する方法とは？-エンジニアの入り口を見ればいいと思う。
クライアント側の設定 WSLでするとなると、Ubuntuのコマンドがそのまま使える。
はじめにSSHに接続しやすいように設定しておこう。
configファイルに関してはかなり重要なファイルになるので、パーミッションを替えておきたい。
参考 .ssh/configファイルでSSH接続を管理する (qiita)
$ mkdir ~/.ssh $ chmod 700 .ssh $ touch ~/.ssh/config  これを設定し、最後に作ったファイルに以下のことを入力する。
### ~.ssh/config Host ##ssh_name## HostName ##ip_or_Domain## User ##User_name## Port ##Port_number##  こんな形で設定してあげると、</description>
    </item>
    
    <item>
      <title>make hugosite</title>
      <link>https://sinn144.github.io/my_blogsite/001_make_hugosite/</link>
      <pubDate>Tue, 16 Jul 2019 11:52:33 +0900</pubDate>
      
      <guid>https://sinn144.github.io/my_blogsite/001_make_hugosite/</guid>
      <description>HUGOで簡単にMarkdownブログを作るのを見様見真似でしてみる 動機 友達に自分のサイトを公開しようと思っただけ。
ちなみに、この文章は寝不足の中造っているので、後日修正するかもです。（大概の文章がおかしい気がするのはご愛嬌）
HUGO周りの扱い方 HUGOのインストール HUGOを最初にインストールします。Ubuntuは非常に簡単です。
$sudo apt install hugo  フォルダ作成 HUGOを立ち上げるためのFolderを作ります。
$hugo new site {$new-site-name-folder} $cd {$new-site-name-folder}  これで、新規フォルダーが完成していることを確認できる。
一時的にサーバー立てて練習 HUGOでサーバーを立てて練習できる。出来るのは、.configファイルがある場所のみ。
$hugo server  ただし、はじめは何も入れていないので、真っ白なページのみが表示される。
サイトに味付けをする hugoは様々なテーマがあるので、それを入れる。
なんでも良いのだが、今回は気に入ったので&amp;rdquo;cupper&amp;rdquo;というテーマを入れてみよう。
hugo_theme_Cupper
と思ったら、最低でも0.54が必要らしい。ので、至急入れ直した。
hugoの最新バージョンはここにあったので、適宜あったもの（OS,解凍方法,アーキテクチャなど）を入れる。
あとは、Cupperの指示に従った。
$cd {$hugo_setting.config_folder} $git clone https://github.com/zwbetz-gh/cupper-hugo-theme.git themes/cupper-hugo-theme  この操作によって、Themeのフォルダにテーマを一つ入れることができた。
テーマ・URLの設定 ここまで編集すると、実際にできているか気になるので、
$hugo server --ThemesDir ../..  とすると実際のデモを見ることができた。ただ、いちいちこんなことを書くのは面倒なので、ファイルを編集しなおす。
$nano config.toml === content === # ここは適宜 languageCode = &amp;quot;en-us&amp;quot; title = &amp;quot;My New Hugo Site&amp;quot; # githubのURLにしてください baseURL = &amp;quot;http://example.</description>
    </item>
    
  </channel>
</rss>